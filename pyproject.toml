[tool.pysen]
version = "0.10.5"

[tool.pysen.lint]
enable_black = true
enable_flake8 = true
enable_isort = true
enable_mypy = true
mypy_preset = "entry" # TODO: "strict"
mypy_plugins = [
  { function = "numpy.typing.mypy_plugin" },
  { function = "pydantic.mypy" },
]
line_length = 88
py_version = "py311"
isort_known_first_party = ["voicevox_engine"]
isort_known_third_party = ["numpy"]
[[tool.pysen.lint.mypy_targets]]
paths = ["."]

[tool.black] # automatically generated by pysen
# pysen ignores and overwrites any modifications
line-length = 88
target-version = ["py311"]

[tool.isort] # automatically generated by pysen
# pysen ignores and overwrites any modifications
default_section = "THIRDPARTY"
ensure_newline_before_comments = true
force_grid_wrap = 0
force_single_line = false
include_trailing_comma = true
known_first_party = ["voicevox_engine"]
known_third_party = ["numpy"]
line_length = 88
multi_line_output = 3
use_parentheses = true

[tool.poetry]
name = "voicevox_engine"
version = "0.0.0"
description = ""
authors = ["Hiroshiba <hihokaruta@gmail.com>"]

[tool.poetry.dependencies]
python = "~3.11"
numpy = "^1.20.0"
fastapi = "^0.110.0"
python-multipart = "^0.0.5" # NOTE: required by fastapi
uvicorn = "^0.15.0"
soundfile = "^0.12.1"
pyyaml = "^6.0"
pyworld = "^0.3.0"
jinja2 = "^3.1.2" # NOTE: required by fastapi
pyopenjtalk = { git = "https://github.com/VOICEVOX/pyopenjtalk", rev = "b35fc89fe42948a28e33aed886ea145a51113f88" }
semver = "^3.0.0"
platformdirs = "^4.2.0"
soxr = "^0.3.6"
pydantic = "<2"
starlette = "^0.36.3"

[tool.poetry.group.dev.dependencies]
pyinstaller = "^5.13"
pre-commit = "^2.16.0"
poetry = "1.8.1"
poetry-plugin-export = "^1.6.0"

[tool.poetry.group.test.dependencies]
pysen = "~0.10.5"
black = "^24.2.0"
flake8-bugbear = "^24.2.6"
flake8 = "^7.0.0"
isort = "^5.13.0"
mypy = "^1.8.0"
pytest = "^8.0.0"
coveralls = "^3.2.0"
poetry = "1.8.1"
poetry-plugin-export = "^1.6.0"
httpx = "^0.25.0"          # NOTE: required by fastapi.testclient.TestClient
syrupy = "^4.6.1"
types-pyyaml = "^6.0"

[tool.poetry.group.license.dependencies]
pip-licenses = "^4.3.4"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
