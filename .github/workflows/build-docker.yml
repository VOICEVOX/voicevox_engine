name: build-docker
on:
  push:
    branches:
      # - master
  release:
    types:
      - created

jobs:
  build-docker:
    runs-on: ${{ matrix.os }}

    env:
      IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/voicevox_engine
      # IMAGE_NAME: voicevox/voicevox_engine

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            tag: ''
            target: runtime-env
            base_runtime_image: ubuntu:focal
          - os: ubuntu-latest
            tag: cpu
            target: runtime-env
            base_runtime_image: ubuntu:focal
          - os: ubuntu-latest
            tag: cpu-ubuntu20.04
            target: runtime-env
            base_runtime_image: ubuntu:focal
          - os: ubuntu-latest
            tag: nvidia
            target: runtime-nvidia-env
            base_runtime_image: nvidia/cuda:11.4.1-cudnn8-runtime-ubuntu20.04
          - os: ubuntu-latest
            tag: nvidia-ubuntu20.04
            target: runtime-nvidia-env
            base_runtime_image: nvidia/cuda:11.4.1-cudnn8-runtime-ubuntu20.04

    steps:
      - uses: actions/checkout@v2

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.base_runtime_image }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.base_runtime_image }}

      - name: Build and Deploy Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          file: ./Dockerfile
          build-args: |
            BASE_RUNTIME_IMAGE=${{ matrix.base_runtime_image }}
          target: ${{ matrix.target }}
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ matrix.tag }}${{ (matrix.tag != '' && '-') || '' }}latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: Build and Deploy versioned Docker image
        if: success() && github.event.release.tag_name != ''
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          file: ./Dockerfile
          build-args: |
            BASE_RUNTIME_IMAGE=${{ matrix.base_runtime_image }}
          target: ${{ matrix.target }}
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ matrix.tag }}${{ (matrix.tag != '' && '-') || '' }}${{ github.event.release.tag_name }}
          cache-from: type=local,src=/tmp/.buildx-cache-new
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: Move cache (reduce cache size)
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
