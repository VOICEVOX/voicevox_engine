name: build
on:
  push:
    # branches:
    #   - master
  release:
    types:
      - created

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/voicevox_engine

jobs:
  # Build Linux binary (push only buildcache image)
  build-linux:
    strategy:
      matrix:
        include:
        - os: ubuntu-latest
          tag: build-env-cpu-ubuntu20.04
          runtime_tag: cpu-ubuntu20.04 # for cache use
          target: build-env
          base_runtime_image: ubuntu:focal
          nuitka_cache_path: cache/Nuitka

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # NOTE: `load: true` may silently fail when the GitHub Actions disk (14GB) is full.
      # https://docs.github.com/ja/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
      - name: Create binary build environment with Docker
        uses: docker/build-push-action@v2
        env:
          IMAGE_TAG: ${{ env.IMAGE_NAME }}:${{ matrix.tag }}${{ (matrix.tag != '' && '-') || '' }}latest
          RUNTIME_IMAGE_TAG: ${{ env.IMAGE_NAME }}:${{ matrix.runtime_tag }}${{ (matrix.runtime_tag != '' && '-') || '' }}latest
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          file: ./Dockerfile
          build-args: |
            BASE_RUNTIME_IMAGE=${{ matrix.base_runtime_image }}
          target: ${{ matrix.target }}
          load: true
          tags: |
            ${{ env.IMAGE_TAG }}
          cache-from: |
            type=registry,ref=${{ env.IMAGE_TAG }}-buildcache
            type=registry,ref=${{ env.RUNTIME_IMAGE_TAG }}-buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_TAG }}-buildcache,mode=max

      # Build run.py with Nuitka in Docker
      - name: Cache Nuitka (ccache, module-cache)
        uses: actions/cache@v2
        id: nuitka-cache
        with:
          path: ${{ matrix.nuitka_cache_path }}
          key: ${{ runner.os }}-nuitka-${{ matrix.target }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-nuitka-${{ matrix.target }}-

      - name: Build run.py with Nuitka in Docker
        env:
          IMAGE_TAG: ${{ env.IMAGE_NAME }}:${{ matrix.tag }}${{ (matrix.tag != '' && '-') || '' }}latest
        run: |
          docker run --rm \
            -v "$(readlink -f "${{ matrix.nuitka_cache_path }}"):/home/user/.cache/Nuitka" \
            -v "$(readlink -f "build"):/opt/voicevox_engine_build" \
            "${{ env.IMAGE_TAG }}"

      - uses: actions/upload-artifact@v2
        with:
          name: run.dist
          path: build/run.dist/
