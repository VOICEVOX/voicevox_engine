name: check
on:
  push:
    branches:
      - '**'

jobs:
  # Build Mac binary (x64 arch only)
  build-mac:
    strategy:
      matrix:
        include:
        - os: [macos-11]
          python: '3.7'
          python_architecture: 'x64'
          pip_cache_path: ~/Library/Caches/pip
          voicevox_resource_version: '0.8.0'
          voicevox_core_version: '0.8.0'
          voicevox_core_example_version: '0.8.0'
          artifact_name: macos-x64

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      # Download VOICEVOX RESOURCE
      - name: Prepare VOICEVOX RESOURCE cache
        uses: actions/cache@v2
        id: voicevox-resource-cache
        with:
          key: voicevox-resource-${{ matrix.voicevox_resource_version }}
          path: download/resource

      - name: Checkout VOICEVOX RESOURCE
        if: steps.voicevox-resource-cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v2
        with:
          repository: Hiroshiba/voicevox_resource
          path: download/resource

      # Merge VOICEVOX RESOURCE
      - name: Merge VOICEVOX RESOURCE
        shell: bash
        run: |
          set -eux
          rm -r speaker_info
          cp -r download/resource/character_info speaker_info


  # Build Linux binary (push only buildcache image)
  build-linux:
    strategy:
      matrix:
        os: [ubuntu-latest]
        tag:
          - build-cpu-ubuntu18.04
          - build-nvidia-ubuntu18.04
        voicevox_resource_version: ['0.8.0']
        voicevox_core_version: ['0.8.0']
        voicevox_core_example_version: ['0.8.0']
        include:
        - tag: build-cpu-ubuntu18.04
          runtime_tag: cpu-ubuntu18.04 # for cache use
          target: build-env
          base_image: ubuntu:bionic
          base_runtime_image: ubuntu:bionic
          voicevox_core_library_name: core_cpu
          libtorch_url: https://download.pytorch.org/libtorch/cpu/libtorch-cxx11-abi-shared-with-deps-1.9.0%2Bcpu.zip
          use_glibc_231_workaround: 1
          artifact_name: linux-cpu
          nuitka_cache_path: nuitka_cache
        - tag: build-nvidia-ubuntu18.04
          runtime_tag: nvidia-ubuntu18.04 # for cache use
          target: build-env
          base_image: ubuntu:bionic
          base_runtime_image: nvidia/driver:460.73.01-ubuntu18.04
          voicevox_core_library_name: core
          libtorch_url: https://download.pytorch.org/libtorch/cu111/libtorch-cxx11-abi-shared-with-deps-1.9.0%2Bcu111.zip
          use_glibc_231_workaround: 1
          artifact_name: linux-nvidia
          nuitka_cache_path: nuitka_cache

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      # Download VOICEVOX RESOURCE
      - name: Prepare VOICEVOX RESOURCE cache
        uses: actions/cache@v2
        id: voicevox-resource-cache
        with:
          key: voicevox-resource-${{ matrix.voicevox_resource_version }}
          path: download/resource

      - name: Checkout VOICEVOX RESOURCE
        if: steps.voicevox-resource-cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v2
        with:
          repository: Hiroshiba/voicevox_resource
          path: download/resource

      # Merge VOICEVOX RESOURCE
      - name: Merge VOICEVOX RESOURCE
        shell: bash
        run: |
          set -eux
          rm -r speaker_info
          cp -r download/resource/character_info speaker_info


  build-windows:
    strategy:
      matrix:
        include:
        # Windows CPU
        - os: windows-2019
          python: '3.7'
          python_architecture: 'x64'
          voicevox_resource_version: '0.8.0'
          voicevox_core_version: '0.8.0'
          voicevox_core_dll_name: core_cpu.dll
          voicevox_core_example_version: '0.8.0'
          libtorch_url: https://download.pytorch.org/libtorch/cpu/libtorch-win-shared-with-deps-1.9.0%2Bcpu.zip
          ccache_url: https://github.com/ccache/ccache/releases/download/v4.4.1/ccache-4.4.1-windows-64.zip
          artifact_name: windows-cpu
          nuitka_cache_path: nuitka_cache
          pip_cache_path: ~\AppData\Local\pip\Cache
        # Windows NVIDIA GPU
        - os: windows-2019
          python: '3.7'
          python_architecture: 'x64'
          voicevox_resource_version: '0.8.0'
          voicevox_core_version: '0.8.0'
          voicevox_core_dll_name: core.dll
          voicevox_core_example_version: '0.8.0'
          libtorch_url: https://download.pytorch.org/libtorch/cu111/libtorch-win-shared-with-deps-1.9.0%2Bcu111.zip
          ccache_url: https://github.com/ccache/ccache/releases/download/v4.4.1/ccache-4.4.1-windows-64.zip
          artifact_name: windows-nvidia
          nuitka_cache_path: nuitka_cache
          pip_cache_path: ~\AppData\Local\pip\Cache

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      # Download VOICEVOX RESOURCE
      - name: Prepare VOICEVOX RESOURCE cache
        uses: actions/cache@v2
        id: voicevox-resource-cache
        with:
          key: voicevox-resource-${{ matrix.voicevox_resource_version }}
          path: download/resource

      - name: Checkout VOICEVOX RESOURCE
        if: steps.voicevox-resource-cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v2
        with:
          repository: Hiroshiba/voicevox_resource
          path: download/resource

      # Merge VOICEVOX RESOURCE
      - name: Merge VOICEVOX RESOURCE
        shell: bash
        run: |
          set -eux
          rm -r speaker_info
          cp -r download/resource/character_info speaker_info
